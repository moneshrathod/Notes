#include<iostream>
#include<math.h>
#include<cmath>
using namespace std;
//find gcd
int gcd(int a,int b){
 int t;
    while(1){
        t=a%b;
        if(t==0)
        return b;
        a=b;
        b=t;
    }
}

int main(){
  //2random prime number
  double p=7;
  double q=17;
  double n=p*q;//calculate n
  double track;
  double phi=(p-1)*(q-1);//calculate phi
  //public key
  //e stand for encrypt
  double e=5;
  //for checking that 1<e<phi(n) and gcd(e,phi(n))=1;e and phi(n) are coprime.
  while(e<phi){
     track = gcd(e,phi);
     if(track==1)
     break;
     else
     e++;

}
//private key
//d stands for decrypt
//chossing d such that it statifies d*e = 1 mod phi
double D =(77);
double d1=1/e;
double d = fmod(d1,phi);
double messege =10;
double c = pow(messege,e); //encrypt the messege
double m = pow(c,d);
c=fmod(c,n);
c=fmod(m,n);
cout<<"Orginal messege ="<<messege;
cout<<"\n"<<"p="<<p;
cout<<"\n"<<"q="<<q;
cout<<"\n"<<"n=pq="<<n;
cout<<"\n"<<"phi="<<phi;
cout<<"\n"<<"e="<<e;
cout<<"\n"<<"D="<<D;
cout<<"\n"<<"Encryped messege ="<<c;
cout<<"\n"<<"Decrypted messege ="<<m;
return 0;

}
